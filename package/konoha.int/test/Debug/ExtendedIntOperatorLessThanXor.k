// generated by kimio kurmaitsu

K.import("konoha.int")
int succ(int n) {
  return n+1;
}
int minus(int n) {
  return -n;
}



void test() {
  int a = 1;
  int b = -1;
  boolean btrue = true
  assert((1 < 1 ^ 1) == false);
  assert((1 < 1 ^ a) == false);
  assert((1 < 1 ^ succ(0)) == false);
  assert((1 < 1 ^ -b) == false);
  assert((1 < 1 ^ -minus(1)) == false);
  assert((1 < 1 ^ ~-2) == false);
  assert((1 < a ^ 1) == false);
  assert((1 < a ^ a) == false);
  assert((1 < a ^ succ(0)) == false);
  assert((1 < a ^ -b) == false);
  assert((1 < a ^ -minus(1)) == false);
  assert((1 < a ^ ~-2) == false);
  assert((1 < succ(0) ^ 1) == false);
  assert((1 < succ(0) ^ a) == false);
  assert((1 < succ(0) ^ succ(0)) == false);
  assert((1 < succ(0) ^ -b) == false);
  assert((1 < succ(0) ^ -minus(1)) == false);
  assert((1 < succ(0) ^ ~-2) == false);
  assert((1 < -b ^ 1) == false);
  assert((1 < -b ^ a) == false);
  assert((1 < -b ^ succ(0)) == false);
  assert((1 < -b ^ -b) == false);
  assert((1 < -b ^ -minus(1)) == false);
  assert((1 < -b ^ ~-2) == false);
  assert((1 < -minus(1) ^ 1) == false);
  assert((1 < -minus(1) ^ a) == false);
  assert((1 < -minus(1) ^ succ(0)) == false);
  assert((1 < -minus(1) ^ -b) == false);
  assert((1 < -minus(1) ^ -minus(1)) == false);
  assert((1 < -minus(1) ^ ~-2) == false);
  assert((1 < ~-2 ^ 1) == false);
  assert((1 < ~-2 ^ a) == false);
  assert((1 < ~-2 ^ succ(0)) == false);
  assert((1 < ~-2 ^ -b) == false);
  assert((1 < ~-2 ^ -minus(1)) == false);
  assert((1 < ~-2 ^ ~-2) == false);
  assert((a < 1 ^ 1) == false);
  assert((a < 1 ^ a) == false);
  assert((a < 1 ^ succ(0)) == false);
  assert((a < 1 ^ -b) == false);
  assert((a < 1 ^ -minus(1)) == false);
  assert((a < 1 ^ ~-2) == false);
  assert((a < a ^ 1) == false);
  assert((a < a ^ a) == false);
  assert((a < a ^ succ(0)) == false);
  assert((a < a ^ -b) == false);
  assert((a < a ^ -minus(1)) == false);
  assert((a < a ^ ~-2) == false);
  assert((a < succ(0) ^ 1) == false);
  assert((a < succ(0) ^ a) == false);
  assert((a < succ(0) ^ succ(0)) == false);
  assert((a < succ(0) ^ -b) == false);
  assert((a < succ(0) ^ -minus(1)) == false);
  assert((a < succ(0) ^ ~-2) == false);
  assert((a < -b ^ 1) == false);
  assert((a < -b ^ a) == false);
  assert((a < -b ^ succ(0)) == false);
  assert((a < -b ^ -b) == false);
  assert((a < -b ^ -minus(1)) == false);
  assert((a < -b ^ ~-2) == false);
  assert((a < -minus(1) ^ 1) == false);
  assert((a < -minus(1) ^ a) == false);
  assert((a < -minus(1) ^ succ(0)) == false);
  assert((a < -minus(1) ^ -b) == false);
  assert((a < -minus(1) ^ -minus(1)) == false);
  assert((a < -minus(1) ^ ~-2) == false);
  assert((a < ~-2 ^ 1) == false);
  assert((a < ~-2 ^ a) == false);
  assert((a < ~-2 ^ succ(0)) == false);
  assert((a < ~-2 ^ -b) == false);
  assert((a < ~-2 ^ -minus(1)) == false);
  assert((a < ~-2 ^ ~-2) == false);
  assert((succ(0) < 1 ^ 1) == false);
  assert((succ(0) < 1 ^ a) == false);
  assert((succ(0) < 1 ^ succ(0)) == false);
  assert((succ(0) < 1 ^ -b) == false);
  assert((succ(0) < 1 ^ -minus(1)) == false);
  assert((succ(0) < 1 ^ ~-2) == false);
  assert((succ(0) < a ^ 1) == false);
  assert((succ(0) < a ^ a) == false);
  assert((succ(0) < a ^ succ(0)) == false);
  assert((succ(0) < a ^ -b) == false);
  assert((succ(0) < a ^ -minus(1)) == false);
  assert((succ(0) < a ^ ~-2) == false);
  assert((succ(0) < succ(0) ^ 1) == false);
  assert((succ(0) < succ(0) ^ a) == false);
  assert((succ(0) < succ(0) ^ succ(0)) == false);
  assert((succ(0) < succ(0) ^ -b) == false);
  assert((succ(0) < succ(0) ^ -minus(1)) == false);
  assert((succ(0) < succ(0) ^ ~-2) == false);
  assert((succ(0) < -b ^ 1) == false);
  assert((succ(0) < -b ^ a) == false);
  assert((succ(0) < -b ^ succ(0)) == false);
  assert((succ(0) < -b ^ -b) == false);
  assert((succ(0) < -b ^ -minus(1)) == false);
  assert((succ(0) < -b ^ ~-2) == false);
  assert((succ(0) < -minus(1) ^ 1) == false);
  assert((succ(0) < -minus(1) ^ a) == false);
  assert((succ(0) < -minus(1) ^ succ(0)) == false);
  assert((succ(0) < -minus(1) ^ -b) == false);
  assert((succ(0) < -minus(1) ^ -minus(1)) == false);
  assert((succ(0) < -minus(1) ^ ~-2) == false);
  assert((succ(0) < ~-2 ^ 1) == false);
  assert((succ(0) < ~-2 ^ a) == false);
  assert((succ(0) < ~-2 ^ succ(0)) == false);
  assert((succ(0) < ~-2 ^ -b) == false);
  assert((succ(0) < ~-2 ^ -minus(1)) == false);
  assert((succ(0) < ~-2 ^ ~-2) == false);
  assert((-b < 1 ^ 1) == false);
  assert((-b < 1 ^ a) == false);
  assert((-b < 1 ^ succ(0)) == false);
  assert((-b < 1 ^ -b) == false);
  assert((-b < 1 ^ -minus(1)) == false);
  assert((-b < 1 ^ ~-2) == false);
  assert((-b < a ^ 1) == false);
  assert((-b < a ^ a) == false);
  assert((-b < a ^ succ(0)) == false);
  assert((-b < a ^ -b) == false);
  assert((-b < a ^ -minus(1)) == false);
  assert((-b < a ^ ~-2) == false);
  assert((-b < succ(0) ^ 1) == false);
  assert((-b < succ(0) ^ a) == false);
  assert((-b < succ(0) ^ succ(0)) == false);
  assert((-b < succ(0) ^ -b) == false);
  assert((-b < succ(0) ^ -minus(1)) == false);
  assert((-b < succ(0) ^ ~-2) == false);
  assert((-b < -b ^ 1) == false);
  assert((-b < -b ^ a) == false);
  assert((-b < -b ^ succ(0)) == false);
  assert((-b < -b ^ -b) == false);
  assert((-b < -b ^ -minus(1)) == false);
  assert((-b < -b ^ ~-2) == false);
  assert((-b < -minus(1) ^ 1) == false);
  assert((-b < -minus(1) ^ a) == false);
  assert((-b < -minus(1) ^ succ(0)) == false);
  assert((-b < -minus(1) ^ -b) == false);
  assert((-b < -minus(1) ^ -minus(1)) == false);
  assert((-b < -minus(1) ^ ~-2) == false);
  assert((-b < ~-2 ^ 1) == false);
  assert((-b < ~-2 ^ a) == false);
  assert((-b < ~-2 ^ succ(0)) == false);
  assert((-b < ~-2 ^ -b) == false);
  assert((-b < ~-2 ^ -minus(1)) == false);
  assert((-b < ~-2 ^ ~-2) == false);
  assert((-minus(1) < 1 ^ 1) == false);
  assert((-minus(1) < 1 ^ a) == false);
  assert((-minus(1) < 1 ^ succ(0)) == false);
  assert((-minus(1) < 1 ^ -b) == false);
  assert((-minus(1) < 1 ^ -minus(1)) == false);
  assert((-minus(1) < 1 ^ ~-2) == false);
  assert((-minus(1) < a ^ 1) == false);
  assert((-minus(1) < a ^ a) == false);
  assert((-minus(1) < a ^ succ(0)) == false);
  assert((-minus(1) < a ^ -b) == false);
  assert((-minus(1) < a ^ -minus(1)) == false);
  assert((-minus(1) < a ^ ~-2) == false);
  assert((-minus(1) < succ(0) ^ 1) == false);
  assert((-minus(1) < succ(0) ^ a) == false);
  assert((-minus(1) < succ(0) ^ succ(0)) == false);
  assert((-minus(1) < succ(0) ^ -b) == false);
  assert((-minus(1) < succ(0) ^ -minus(1)) == false);
  assert((-minus(1) < succ(0) ^ ~-2) == false);
  assert((-minus(1) < -b ^ 1) == false);
  assert((-minus(1) < -b ^ a) == false);
  assert((-minus(1) < -b ^ succ(0)) == false);
  assert((-minus(1) < -b ^ -b) == false);
  assert((-minus(1) < -b ^ -minus(1)) == false);
  assert((-minus(1) < -b ^ ~-2) == false);
  assert((-minus(1) < -minus(1) ^ 1) == false);
  assert((-minus(1) < -minus(1) ^ a) == false);
  assert((-minus(1) < -minus(1) ^ succ(0)) == false);
  assert((-minus(1) < -minus(1) ^ -b) == false);
  assert((-minus(1) < -minus(1) ^ -minus(1)) == false);
  assert((-minus(1) < -minus(1) ^ ~-2) == false);
  assert((-minus(1) < ~-2 ^ 1) == false);
  assert((-minus(1) < ~-2 ^ a) == false);
  assert((-minus(1) < ~-2 ^ succ(0)) == false);
  assert((-minus(1) < ~-2 ^ -b) == false);
  assert((-minus(1) < ~-2 ^ -minus(1)) == false);
  assert((-minus(1) < ~-2 ^ ~-2) == false);
  assert((~-2 < 1 ^ 1) == false);
  assert((~-2 < 1 ^ a) == false);
  assert((~-2 < 1 ^ succ(0)) == false);
  assert((~-2 < 1 ^ -b) == false);
  assert((~-2 < 1 ^ -minus(1)) == false);
  assert((~-2 < 1 ^ ~-2) == false);
  assert((~-2 < a ^ 1) == false);
  assert((~-2 < a ^ a) == false);
  assert((~-2 < a ^ succ(0)) == false);
  assert((~-2 < a ^ -b) == false);
  assert((~-2 < a ^ -minus(1)) == false);
  assert((~-2 < a ^ ~-2) == false);
  assert((~-2 < succ(0) ^ 1) == false);
  assert((~-2 < succ(0) ^ a) == false);
  assert((~-2 < succ(0) ^ succ(0)) == false);
  assert((~-2 < succ(0) ^ -b) == false);
  assert((~-2 < succ(0) ^ -minus(1)) == false);
  assert((~-2 < succ(0) ^ ~-2) == false);
  assert((~-2 < -b ^ 1) == false);
  assert((~-2 < -b ^ a) == false);
  assert((~-2 < -b ^ succ(0)) == false);
  assert((~-2 < -b ^ -b) == false);
  assert((~-2 < -b ^ -minus(1)) == false);
  assert((~-2 < -b ^ ~-2) == false);
  assert((~-2 < -minus(1) ^ 1) == false);
  assert((~-2 < -minus(1) ^ a) == false);
  assert((~-2 < -minus(1) ^ succ(0)) == false);
  assert((~-2 < -minus(1) ^ -b) == false);
  assert((~-2 < -minus(1) ^ -minus(1)) == false);
  assert((~-2 < -minus(1) ^ ~-2) == false);
  assert((~-2 < ~-2 ^ 1) == false);
  assert((~-2 < ~-2 ^ a) == false);
  assert((~-2 < ~-2 ^ succ(0)) == false);
  assert((~-2 < ~-2 ^ -b) == false);
  assert((~-2 < ~-2 ^ -minus(1)) == false);
  assert((~-2 < ~-2 ^ ~-2) == false);
}

test();
