// generated by kimio kurmaitsu

K.import("konoha.int")
int succ(int n) {
  return n+1;
}
int minus(int n) {
  return -n;
}



void test() {
  int a = 1;
  int b = -1;
  boolean btrue = true
  assert((1 % 1 < 1) == true);
  assert((1 % 1 < a) == true);
  assert((1 % 1 < succ(0)) == true);
  assert((1 % 1 < -b) == true);
  assert((1 % 1 < -minus(1)) == true);
  assert((1 % 1 < ~-2) == true);
  assert((1 % a < 1) == true);
  assert((1 % a < a) == true);
  assert((1 % a < succ(0)) == true);
  assert((1 % a < -b) == true);
  assert((1 % a < -minus(1)) == true);
  assert((1 % a < ~-2) == true);
  assert((1 % succ(0) < 1) == true);
  assert((1 % succ(0) < a) == true);
  assert((1 % succ(0) < succ(0)) == true);
  assert((1 % succ(0) < -b) == true);
  assert((1 % succ(0) < -minus(1)) == true);
  assert((1 % succ(0) < ~-2) == true);
  assert((1 % -b < 1) == true);
  assert((1 % -b < a) == true);
  assert((1 % -b < succ(0)) == true);
  assert((1 % -b < -b) == true);
  assert((1 % -b < -minus(1)) == true);
  assert((1 % -b < ~-2) == true);
  assert((1 % -minus(1) < 1) == true);
  assert((1 % -minus(1) < a) == true);
  assert((1 % -minus(1) < succ(0)) == true);
  assert((1 % -minus(1) < -b) == true);
  assert((1 % -minus(1) < -minus(1)) == true);
  assert((1 % -minus(1) < ~-2) == true);
  assert((1 % ~-2 < 1) == true);
  assert((1 % ~-2 < a) == true);
  assert((1 % ~-2 < succ(0)) == true);
  assert((1 % ~-2 < -b) == true);
  assert((1 % ~-2 < -minus(1)) == true);
  assert((1 % ~-2 < ~-2) == true);
  assert((a % 1 < 1) == true);
  assert((a % 1 < a) == true);
  assert((a % 1 < succ(0)) == true);
  assert((a % 1 < -b) == true);
  assert((a % 1 < -minus(1)) == true);
  assert((a % 1 < ~-2) == true);
  assert((a % a < 1) == true);
  assert((a % a < a) == true);
  assert((a % a < succ(0)) == true);
  assert((a % a < -b) == true);
  assert((a % a < -minus(1)) == true);
  assert((a % a < ~-2) == true);
  assert((a % succ(0) < 1) == true);
  assert((a % succ(0) < a) == true);
  assert((a % succ(0) < succ(0)) == true);
  assert((a % succ(0) < -b) == true);
  assert((a % succ(0) < -minus(1)) == true);
  assert((a % succ(0) < ~-2) == true);
  assert((a % -b < 1) == true);
  assert((a % -b < a) == true);
  assert((a % -b < succ(0)) == true);
  assert((a % -b < -b) == true);
  assert((a % -b < -minus(1)) == true);
  assert((a % -b < ~-2) == true);
  assert((a % -minus(1) < 1) == true);
  assert((a % -minus(1) < a) == true);
  assert((a % -minus(1) < succ(0)) == true);
  assert((a % -minus(1) < -b) == true);
  assert((a % -minus(1) < -minus(1)) == true);
  assert((a % -minus(1) < ~-2) == true);
  assert((a % ~-2 < 1) == true);
  assert((a % ~-2 < a) == true);
  assert((a % ~-2 < succ(0)) == true);
  assert((a % ~-2 < -b) == true);
  assert((a % ~-2 < -minus(1)) == true);
  assert((a % ~-2 < ~-2) == true);
  assert((succ(0) % 1 < 1) == true);
  assert((succ(0) % 1 < a) == true);
  assert((succ(0) % 1 < succ(0)) == true);
  assert((succ(0) % 1 < -b) == true);
  assert((succ(0) % 1 < -minus(1)) == true);
  assert((succ(0) % 1 < ~-2) == true);
  assert((succ(0) % a < 1) == true);
  assert((succ(0) % a < a) == true);
  assert((succ(0) % a < succ(0)) == true);
  assert((succ(0) % a < -b) == true);
  assert((succ(0) % a < -minus(1)) == true);
  assert((succ(0) % a < ~-2) == true);
  assert((succ(0) % succ(0) < 1) == true);
  assert((succ(0) % succ(0) < a) == true);
  assert((succ(0) % succ(0) < succ(0)) == true);
  assert((succ(0) % succ(0) < -b) == true);
  assert((succ(0) % succ(0) < -minus(1)) == true);
  assert((succ(0) % succ(0) < ~-2) == true);
  assert((succ(0) % -b < 1) == true);
  assert((succ(0) % -b < a) == true);
  assert((succ(0) % -b < succ(0)) == true);
  assert((succ(0) % -b < -b) == true);
  assert((succ(0) % -b < -minus(1)) == true);
  assert((succ(0) % -b < ~-2) == true);
  assert((succ(0) % -minus(1) < 1) == true);
  assert((succ(0) % -minus(1) < a) == true);
  assert((succ(0) % -minus(1) < succ(0)) == true);
  assert((succ(0) % -minus(1) < -b) == true);
  assert((succ(0) % -minus(1) < -minus(1)) == true);
  assert((succ(0) % -minus(1) < ~-2) == true);
  assert((succ(0) % ~-2 < 1) == true);
  assert((succ(0) % ~-2 < a) == true);
  assert((succ(0) % ~-2 < succ(0)) == true);
  assert((succ(0) % ~-2 < -b) == true);
  assert((succ(0) % ~-2 < -minus(1)) == true);
  assert((succ(0) % ~-2 < ~-2) == true);
  assert((-b % 1 < 1) == true);
  assert((-b % 1 < a) == true);
  assert((-b % 1 < succ(0)) == true);
  assert((-b % 1 < -b) == true);
  assert((-b % 1 < -minus(1)) == true);
  assert((-b % 1 < ~-2) == true);
  assert((-b % a < 1) == true);
  assert((-b % a < a) == true);
  assert((-b % a < succ(0)) == true);
  assert((-b % a < -b) == true);
  assert((-b % a < -minus(1)) == true);
  assert((-b % a < ~-2) == true);
  assert((-b % succ(0) < 1) == true);
  assert((-b % succ(0) < a) == true);
  assert((-b % succ(0) < succ(0)) == true);
  assert((-b % succ(0) < -b) == true);
  assert((-b % succ(0) < -minus(1)) == true);
  assert((-b % succ(0) < ~-2) == true);
  assert((-b % -b < 1) == true);
  assert((-b % -b < a) == true);
  assert((-b % -b < succ(0)) == true);
  assert((-b % -b < -b) == true);
  assert((-b % -b < -minus(1)) == true);
  assert((-b % -b < ~-2) == true);
  assert((-b % -minus(1) < 1) == true);
  assert((-b % -minus(1) < a) == true);
  assert((-b % -minus(1) < succ(0)) == true);
  assert((-b % -minus(1) < -b) == true);
  assert((-b % -minus(1) < -minus(1)) == true);
  assert((-b % -minus(1) < ~-2) == true);
  assert((-b % ~-2 < 1) == true);
  assert((-b % ~-2 < a) == true);
  assert((-b % ~-2 < succ(0)) == true);
  assert((-b % ~-2 < -b) == true);
  assert((-b % ~-2 < -minus(1)) == true);
  assert((-b % ~-2 < ~-2) == true);
  assert((-minus(1) % 1 < 1) == true);
  assert((-minus(1) % 1 < a) == true);
  assert((-minus(1) % 1 < succ(0)) == true);
  assert((-minus(1) % 1 < -b) == true);
  assert((-minus(1) % 1 < -minus(1)) == true);
  assert((-minus(1) % 1 < ~-2) == true);
  assert((-minus(1) % a < 1) == true);
  assert((-minus(1) % a < a) == true);
  assert((-minus(1) % a < succ(0)) == true);
  assert((-minus(1) % a < -b) == true);
  assert((-minus(1) % a < -minus(1)) == true);
  assert((-minus(1) % a < ~-2) == true);
  assert((-minus(1) % succ(0) < 1) == true);
  assert((-minus(1) % succ(0) < a) == true);
  assert((-minus(1) % succ(0) < succ(0)) == true);
  assert((-minus(1) % succ(0) < -b) == true);
  assert((-minus(1) % succ(0) < -minus(1)) == true);
  assert((-minus(1) % succ(0) < ~-2) == true);
  assert((-minus(1) % -b < 1) == true);
  assert((-minus(1) % -b < a) == true);
  assert((-minus(1) % -b < succ(0)) == true);
  assert((-minus(1) % -b < -b) == true);
  assert((-minus(1) % -b < -minus(1)) == true);
  assert((-minus(1) % -b < ~-2) == true);
  assert((-minus(1) % -minus(1) < 1) == true);
  assert((-minus(1) % -minus(1) < a) == true);
  assert((-minus(1) % -minus(1) < succ(0)) == true);
  assert((-minus(1) % -minus(1) < -b) == true);
  assert((-minus(1) % -minus(1) < -minus(1)) == true);
  assert((-minus(1) % -minus(1) < ~-2) == true);
  assert((-minus(1) % ~-2 < 1) == true);
  assert((-minus(1) % ~-2 < a) == true);
  assert((-minus(1) % ~-2 < succ(0)) == true);
  assert((-minus(1) % ~-2 < -b) == true);
  assert((-minus(1) % ~-2 < -minus(1)) == true);
  assert((-minus(1) % ~-2 < ~-2) == true);
  assert((~-2 % 1 < 1) == true);
  assert((~-2 % 1 < a) == true);
  assert((~-2 % 1 < succ(0)) == true);
  assert((~-2 % 1 < -b) == true);
  assert((~-2 % 1 < -minus(1)) == true);
  assert((~-2 % 1 < ~-2) == true);
  assert((~-2 % a < 1) == true);
  assert((~-2 % a < a) == true);
  assert((~-2 % a < succ(0)) == true);
  assert((~-2 % a < -b) == true);
  assert((~-2 % a < -minus(1)) == true);
  assert((~-2 % a < ~-2) == true);
  assert((~-2 % succ(0) < 1) == true);
  assert((~-2 % succ(0) < a) == true);
  assert((~-2 % succ(0) < succ(0)) == true);
  assert((~-2 % succ(0) < -b) == true);
  assert((~-2 % succ(0) < -minus(1)) == true);
  assert((~-2 % succ(0) < ~-2) == true);
  assert((~-2 % -b < 1) == true);
  assert((~-2 % -b < a) == true);
  assert((~-2 % -b < succ(0)) == true);
  assert((~-2 % -b < -b) == true);
  assert((~-2 % -b < -minus(1)) == true);
  assert((~-2 % -b < ~-2) == true);
  assert((~-2 % -minus(1) < 1) == true);
  assert((~-2 % -minus(1) < a) == true);
  assert((~-2 % -minus(1) < succ(0)) == true);
  assert((~-2 % -minus(1) < -b) == true);
  assert((~-2 % -minus(1) < -minus(1)) == true);
  assert((~-2 % -minus(1) < ~-2) == true);
  assert((~-2 % ~-2 < 1) == true);
  assert((~-2 % ~-2 < a) == true);
  assert((~-2 % ~-2 < succ(0)) == true);
  assert((~-2 % ~-2 < -b) == true);
  assert((~-2 % ~-2 < -minus(1)) == true);
  assert((~-2 % ~-2 < ~-2) == true);
}

test();
