// generated by kimio kurmaitsu

K.import("konoha.int")
int succ(int n) {
  return n+1;
}
int minus(int n) {
  return -n;
}



void test() {
  int a = 1;
  int b = -1;
  boolean btrue = true
  assert((1 ^ 1 * 1) == 0);
  assert((1 ^ 1 * a) == 0);
  assert((1 ^ 1 * succ(0)) == 0);
  assert((1 ^ 1 * -b) == 0);
  assert((1 ^ 1 * -minus(1)) == 0);
  assert((1 ^ 1 * ~-2) == 0);
  assert((1 ^ a * 1) == 0);
  assert((1 ^ a * a) == 0);
  assert((1 ^ a * succ(0)) == 0);
  assert((1 ^ a * -b) == 0);
  assert((1 ^ a * -minus(1)) == 0);
  assert((1 ^ a * ~-2) == 0);
  assert((1 ^ succ(0) * 1) == 0);
  assert((1 ^ succ(0) * a) == 0);
  assert((1 ^ succ(0) * succ(0)) == 0);
  assert((1 ^ succ(0) * -b) == 0);
  assert((1 ^ succ(0) * -minus(1)) == 0);
  assert((1 ^ succ(0) * ~-2) == 0);
  assert((1 ^ -b * 1) == 0);
  assert((1 ^ -b * a) == 0);
  assert((1 ^ -b * succ(0)) == 0);
  assert((1 ^ -b * -b) == 0);
  assert((1 ^ -b * -minus(1)) == 0);
  assert((1 ^ -b * ~-2) == 0);
  assert((1 ^ -minus(1) * 1) == 0);
  assert((1 ^ -minus(1) * a) == 0);
  assert((1 ^ -minus(1) * succ(0)) == 0);
  assert((1 ^ -minus(1) * -b) == 0);
  assert((1 ^ -minus(1) * -minus(1)) == 0);
  assert((1 ^ -minus(1) * ~-2) == 0);
  assert((1 ^ ~-2 * 1) == 0);
  assert((1 ^ ~-2 * a) == 0);
  assert((1 ^ ~-2 * succ(0)) == 0);
  assert((1 ^ ~-2 * -b) == 0);
  assert((1 ^ ~-2 * -minus(1)) == 0);
  assert((1 ^ ~-2 * ~-2) == 0);
  assert((a ^ 1 * 1) == 0);
  assert((a ^ 1 * a) == 0);
  assert((a ^ 1 * succ(0)) == 0);
  assert((a ^ 1 * -b) == 0);
  assert((a ^ 1 * -minus(1)) == 0);
  assert((a ^ 1 * ~-2) == 0);
  assert((a ^ a * 1) == 0);
  assert((a ^ a * a) == 0);
  assert((a ^ a * succ(0)) == 0);
  assert((a ^ a * -b) == 0);
  assert((a ^ a * -minus(1)) == 0);
  assert((a ^ a * ~-2) == 0);
  assert((a ^ succ(0) * 1) == 0);
  assert((a ^ succ(0) * a) == 0);
  assert((a ^ succ(0) * succ(0)) == 0);
  assert((a ^ succ(0) * -b) == 0);
  assert((a ^ succ(0) * -minus(1)) == 0);
  assert((a ^ succ(0) * ~-2) == 0);
  assert((a ^ -b * 1) == 0);
  assert((a ^ -b * a) == 0);
  assert((a ^ -b * succ(0)) == 0);
  assert((a ^ -b * -b) == 0);
  assert((a ^ -b * -minus(1)) == 0);
  assert((a ^ -b * ~-2) == 0);
  assert((a ^ -minus(1) * 1) == 0);
  assert((a ^ -minus(1) * a) == 0);
  assert((a ^ -minus(1) * succ(0)) == 0);
  assert((a ^ -minus(1) * -b) == 0);
  assert((a ^ -minus(1) * -minus(1)) == 0);
  assert((a ^ -minus(1) * ~-2) == 0);
  assert((a ^ ~-2 * 1) == 0);
  assert((a ^ ~-2 * a) == 0);
  assert((a ^ ~-2 * succ(0)) == 0);
  assert((a ^ ~-2 * -b) == 0);
  assert((a ^ ~-2 * -minus(1)) == 0);
  assert((a ^ ~-2 * ~-2) == 0);
  assert((succ(0) ^ 1 * 1) == 0);
  assert((succ(0) ^ 1 * a) == 0);
  assert((succ(0) ^ 1 * succ(0)) == 0);
  assert((succ(0) ^ 1 * -b) == 0);
  assert((succ(0) ^ 1 * -minus(1)) == 0);
  assert((succ(0) ^ 1 * ~-2) == 0);
  assert((succ(0) ^ a * 1) == 0);
  assert((succ(0) ^ a * a) == 0);
  assert((succ(0) ^ a * succ(0)) == 0);
  assert((succ(0) ^ a * -b) == 0);
  assert((succ(0) ^ a * -minus(1)) == 0);
  assert((succ(0) ^ a * ~-2) == 0);
  assert((succ(0) ^ succ(0) * 1) == 0);
  assert((succ(0) ^ succ(0) * a) == 0);
  assert((succ(0) ^ succ(0) * succ(0)) == 0);
  assert((succ(0) ^ succ(0) * -b) == 0);
  assert((succ(0) ^ succ(0) * -minus(1)) == 0);
  assert((succ(0) ^ succ(0) * ~-2) == 0);
  assert((succ(0) ^ -b * 1) == 0);
  assert((succ(0) ^ -b * a) == 0);
  assert((succ(0) ^ -b * succ(0)) == 0);
  assert((succ(0) ^ -b * -b) == 0);
  assert((succ(0) ^ -b * -minus(1)) == 0);
  assert((succ(0) ^ -b * ~-2) == 0);
  assert((succ(0) ^ -minus(1) * 1) == 0);
  assert((succ(0) ^ -minus(1) * a) == 0);
  assert((succ(0) ^ -minus(1) * succ(0)) == 0);
  assert((succ(0) ^ -minus(1) * -b) == 0);
  assert((succ(0) ^ -minus(1) * -minus(1)) == 0);
  assert((succ(0) ^ -minus(1) * ~-2) == 0);
  assert((succ(0) ^ ~-2 * 1) == 0);
  assert((succ(0) ^ ~-2 * a) == 0);
  assert((succ(0) ^ ~-2 * succ(0)) == 0);
  assert((succ(0) ^ ~-2 * -b) == 0);
  assert((succ(0) ^ ~-2 * -minus(1)) == 0);
  assert((succ(0) ^ ~-2 * ~-2) == 0);
  assert((-b ^ 1 * 1) == 0);
  assert((-b ^ 1 * a) == 0);
  assert((-b ^ 1 * succ(0)) == 0);
  assert((-b ^ 1 * -b) == 0);
  assert((-b ^ 1 * -minus(1)) == 0);
  assert((-b ^ 1 * ~-2) == 0);
  assert((-b ^ a * 1) == 0);
  assert((-b ^ a * a) == 0);
  assert((-b ^ a * succ(0)) == 0);
  assert((-b ^ a * -b) == 0);
  assert((-b ^ a * -minus(1)) == 0);
  assert((-b ^ a * ~-2) == 0);
  assert((-b ^ succ(0) * 1) == 0);
  assert((-b ^ succ(0) * a) == 0);
  assert((-b ^ succ(0) * succ(0)) == 0);
  assert((-b ^ succ(0) * -b) == 0);
  assert((-b ^ succ(0) * -minus(1)) == 0);
  assert((-b ^ succ(0) * ~-2) == 0);
  assert((-b ^ -b * 1) == 0);
  assert((-b ^ -b * a) == 0);
  assert((-b ^ -b * succ(0)) == 0);
  assert((-b ^ -b * -b) == 0);
  assert((-b ^ -b * -minus(1)) == 0);
  assert((-b ^ -b * ~-2) == 0);
  assert((-b ^ -minus(1) * 1) == 0);
  assert((-b ^ -minus(1) * a) == 0);
  assert((-b ^ -minus(1) * succ(0)) == 0);
  assert((-b ^ -minus(1) * -b) == 0);
  assert((-b ^ -minus(1) * -minus(1)) == 0);
  assert((-b ^ -minus(1) * ~-2) == 0);
  assert((-b ^ ~-2 * 1) == 0);
  assert((-b ^ ~-2 * a) == 0);
  assert((-b ^ ~-2 * succ(0)) == 0);
  assert((-b ^ ~-2 * -b) == 0);
  assert((-b ^ ~-2 * -minus(1)) == 0);
  assert((-b ^ ~-2 * ~-2) == 0);
  assert((-minus(1) ^ 1 * 1) == 0);
  assert((-minus(1) ^ 1 * a) == 0);
  assert((-minus(1) ^ 1 * succ(0)) == 0);
  assert((-minus(1) ^ 1 * -b) == 0);
  assert((-minus(1) ^ 1 * -minus(1)) == 0);
  assert((-minus(1) ^ 1 * ~-2) == 0);
  assert((-minus(1) ^ a * 1) == 0);
  assert((-minus(1) ^ a * a) == 0);
  assert((-minus(1) ^ a * succ(0)) == 0);
  assert((-minus(1) ^ a * -b) == 0);
  assert((-minus(1) ^ a * -minus(1)) == 0);
  assert((-minus(1) ^ a * ~-2) == 0);
  assert((-minus(1) ^ succ(0) * 1) == 0);
  assert((-minus(1) ^ succ(0) * a) == 0);
  assert((-minus(1) ^ succ(0) * succ(0)) == 0);
  assert((-minus(1) ^ succ(0) * -b) == 0);
  assert((-minus(1) ^ succ(0) * -minus(1)) == 0);
  assert((-minus(1) ^ succ(0) * ~-2) == 0);
  assert((-minus(1) ^ -b * 1) == 0);
  assert((-minus(1) ^ -b * a) == 0);
  assert((-minus(1) ^ -b * succ(0)) == 0);
  assert((-minus(1) ^ -b * -b) == 0);
  assert((-minus(1) ^ -b * -minus(1)) == 0);
  assert((-minus(1) ^ -b * ~-2) == 0);
  assert((-minus(1) ^ -minus(1) * 1) == 0);
  assert((-minus(1) ^ -minus(1) * a) == 0);
  assert((-minus(1) ^ -minus(1) * succ(0)) == 0);
  assert((-minus(1) ^ -minus(1) * -b) == 0);
  assert((-minus(1) ^ -minus(1) * -minus(1)) == 0);
  assert((-minus(1) ^ -minus(1) * ~-2) == 0);
  assert((-minus(1) ^ ~-2 * 1) == 0);
  assert((-minus(1) ^ ~-2 * a) == 0);
  assert((-minus(1) ^ ~-2 * succ(0)) == 0);
  assert((-minus(1) ^ ~-2 * -b) == 0);
  assert((-minus(1) ^ ~-2 * -minus(1)) == 0);
  assert((-minus(1) ^ ~-2 * ~-2) == 0);
  assert((~-2 ^ 1 * 1) == 0);
  assert((~-2 ^ 1 * a) == 0);
  assert((~-2 ^ 1 * succ(0)) == 0);
  assert((~-2 ^ 1 * -b) == 0);
  assert((~-2 ^ 1 * -minus(1)) == 0);
  assert((~-2 ^ 1 * ~-2) == 0);
  assert((~-2 ^ a * 1) == 0);
  assert((~-2 ^ a * a) == 0);
  assert((~-2 ^ a * succ(0)) == 0);
  assert((~-2 ^ a * -b) == 0);
  assert((~-2 ^ a * -minus(1)) == 0);
  assert((~-2 ^ a * ~-2) == 0);
  assert((~-2 ^ succ(0) * 1) == 0);
  assert((~-2 ^ succ(0) * a) == 0);
  assert((~-2 ^ succ(0) * succ(0)) == 0);
  assert((~-2 ^ succ(0) * -b) == 0);
  assert((~-2 ^ succ(0) * -minus(1)) == 0);
  assert((~-2 ^ succ(0) * ~-2) == 0);
  assert((~-2 ^ -b * 1) == 0);
  assert((~-2 ^ -b * a) == 0);
  assert((~-2 ^ -b * succ(0)) == 0);
  assert((~-2 ^ -b * -b) == 0);
  assert((~-2 ^ -b * -minus(1)) == 0);
  assert((~-2 ^ -b * ~-2) == 0);
  assert((~-2 ^ -minus(1) * 1) == 0);
  assert((~-2 ^ -minus(1) * a) == 0);
  assert((~-2 ^ -minus(1) * succ(0)) == 0);
  assert((~-2 ^ -minus(1) * -b) == 0);
  assert((~-2 ^ -minus(1) * -minus(1)) == 0);
  assert((~-2 ^ -minus(1) * ~-2) == 0);
  assert((~-2 ^ ~-2 * 1) == 0);
  assert((~-2 ^ ~-2 * a) == 0);
  assert((~-2 ^ ~-2 * succ(0)) == 0);
  assert((~-2 ^ ~-2 * -b) == 0);
  assert((~-2 ^ ~-2 * -minus(1)) == 0);
  assert((~-2 ^ ~-2 * ~-2) == 0);
}

test();
